{"remainingRequest":"D:\\projectsss\\rongxiaotong_\\sale\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\projectsss\\rongxiaotong_\\sale\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\projectsss\\rongxiaotong_\\sale\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectsss\\rongxiaotong_\\sale\\src\\views\\HomeGuide.vue?vue&type=template&id=49b05a13&","dependencies":[{"path":"D:\\projectsss\\rongxiaotong_\\sale\\src\\views\\HomeGuide.vue","mtime":1649832386673},{"path":"D:\\projectsss\\rongxiaotong_\\sale\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsss\\rongxiaotong_\\sale\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\projectsss\\rongxiaotong_\\sale\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsss\\rongxiaotong_\\sale\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}