{"remainingRequest":"C:\\Users\\Lenovo\\Desktop\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lenovo\\Desktop\\vue\\src\\views\\GuideSourcePage\\Im.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Lenovo\\Desktop\\vue\\src\\views\\GuideSourcePage\\Im.vue","mtime":1688697280356},{"path":"C:\\Users\\Lenovo\\Desktop\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lenovo\\Desktop\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Lenovo\\Desktop\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lenovo\\Desktop\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgcmVxdWVzdCBmcm9tICJAL3V0aWxzL3JlcXVlc3QiOw0KbGV0IHNvY2tldDsNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogIkltIiwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgY2lyY2xlVXJsOiAnaHR0cHM6Ly9jdWJlLmVsZW1lY2RuLmNvbS8zLzdjLzNlYTZiZWVjNjQzNjljMjY0MmI5MmM2NzI2ZjFlcG5nLnBuZycsDQogICAgICB1c2VyOiB7fSwNCiAgICAgIGlzQ29sbGFwc2U6IGZhbHNlLA0KICAgICAgdXNlcnM6IFtdLA0KICAgICAgY2hhdFVzZXI6ICcnLA0KICAgICAgdGV4dDogIiIsDQogICAgICBtZXNzYWdlczogW10sDQogICAgICBjb250ZW50OiAnJw0KICAgIH0NCiAgfSwNCiAgY3JlYXRlZCgpIHsNCiAgICB0aGlzLmluaXQoKQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgc2VuZCgpIHsNCiAgICAgIGlmICghdGhpcy5jaGF0VXNlcikgew0KICAgICAgICB0aGlzLiRtZXNzYWdlKHt0eXBlOiAnd2FybmluZycsIG1lc3NhZ2U6ICLor7fpgInmi6nogYrlpKnlr7nosaEifSkNCiAgICAgICAgcmV0dXJuOw0KICAgICAgfQ0KICAgICAgaWYgKCF0aGlzLnRleHQpIHsNCiAgICAgICAgdGhpcy4kbWVzc2FnZSh7dHlwZTogJ3dhcm5pbmcnLCBtZXNzYWdlOiAi6K+36L6T5YWl5YaF5a65In0pDQogICAgICB9IGVsc2Ugew0KICAgICAgICBpZiAodHlwZW9mIChXZWJTb2NrZXQpID09ICJ1bmRlZmluZWQiKSB7DQogICAgICAgICAgY29uc29sZS5sb2coIuaCqOeahOa1j+iniOWZqOS4jeaUr+aMgVdlYlNvY2tldCIpOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIGNvbnNvbGUubG9nKCLmgqjnmoTmtY/op4jlmajmlK/mjIFXZWJTb2NrZXQiKTsNCiAgICAgICAgICAvLyDnu4Too4XlvoXlj5HpgIHnmoTmtojmga8ganNvbg0KICAgICAgICAgIC8vIHsiZnJvbSI6ICJ6aGFuZyIsICJ0byI6ICJhZG1pbiIsICJ0ZXh0IjogIuiBiuWkqeaWh+acrCJ9DQogICAgICAgICAgbGV0IG1lc3NhZ2UgPSB7ZnJvbTogdGhpcy51c2VyLnVzZXJuYW1lLCB0bzogdGhpcy5jaGF0VXNlciwgdGV4dDogdGhpcy50ZXh0fQ0KICAgICAgICAgIHNvY2tldC5zZW5kKEpTT04uc3RyaW5naWZ5KG1lc3NhZ2UpKTsgIC8vIOWwhue7hOijheWlveeahGpzb27lj5HpgIHnu5nmnI3liqHnq6/vvIznlLHmnI3liqHnq6/ov5vooYzovazlj5ENCiAgICAgICAgICB0aGlzLm1lc3NhZ2VzLnB1c2goe3VzZXI6IHRoaXMudXNlci51c2VybmFtZSwgdGV4dDogdGhpcy50ZXh0fSkNCiAgICAgICAgICAvLyDmnoTlu7rmtojmga/lhoXlrrnvvIzmnKzkurrmtojmga8NCiAgICAgICAgICB0aGlzLmNyZWF0ZUNvbnRlbnQobnVsbCwgdGhpcy51c2VyLnVzZXJuYW1lLCB0aGlzLnRleHQpDQogICAgICAgICAgdGhpcy50ZXh0ID0gJyc7DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9LA0KICAgIGNyZWF0ZUNvbnRlbnQocmVtb3RlVXNlciwgbm93VXNlciwgdGV4dCkgeyAgLy8g6L+Z5Liq5pa55rOV5piv55So5p2l5bCGIGpzb27nmoTogYrlpKnmtojmga/mlbDmja7ovazmjaLmiJAgaHRtbOeahOOAgg0KICAgICAgbGV0IGh0bWwNCiAgICAgIC8vIOW9k+WJjeeUqOaIt+a2iOaBrw0KICAgICAgaWYgKG5vd1VzZXIpIHsgLy8gbm93VXNlciDooajnpLrmmK/lkKbmmL7npLrlvZPliY3nlKjmiLflj5HpgIHnmoTogYrlpKnmtojmga/vvIznu7/oibLmsJTms6ENCiAgICAgICAgaHRtbCA9ICI8ZGl2IGNsYXNzPVwiZWwtcm93XCIgc3R5bGU9XCJwYWRkaW5nOiA1cHggMFwiPlxuIiArDQogICAgICAgICAgICAiICA8ZGl2IGNsYXNzPVwiZWwtY29sIGVsLWNvbC0yMlwiIHN0eWxlPVwidGV4dC1hbGlnbjogcmlnaHQ7IHBhZGRpbmctcmlnaHQ6IDEwcHhcIj5cbiIgKw0KICAgICAgICAgICAgIiAgICA8ZGl2IGNsYXNzPVwidGlwIGxlZnRcIj4iICsgdGV4dCArICI8L2Rpdj5cbiIgKw0KICAgICAgICAgICAgIiAgPC9kaXY+XG4iICsNCiAgICAgICAgICAgICIgIDxkaXYgY2xhc3M9XCJlbC1jb2wgZWwtY29sLTJcIj5cbiIgKw0KICAgICAgICAgICAgIiAgPHNwYW4gY2xhc3M9XCJlbC1hdmF0YXIgZWwtYXZhdGFyLS1jaXJjbGVcIiBzdHlsZT1cImhlaWdodDogNDBweDsgd2lkdGg6IDQwcHg7IGxpbmUtaGVpZ2h0OiA0MHB4O1wiPlxuIiArDQogICAgICAgICAgICAiICAgIDxpbWcgc3JjPVwiaHR0cHM6Ly9jdWJlLmVsZW1lY2RuLmNvbS8zLzdjLzNlYTZiZWVjNjQzNjljMjY0MmI5MmM2NzI2ZjFlcG5nLnBuZ1wiIHN0eWxlPVwib2JqZWN0LWZpdDogY292ZXI7XCI+XG4iICsNCiAgICAgICAgICAgICIgIDwvc3Bhbj5cbiIgKw0KICAgICAgICAgICAgIiAgPC9kaXY+XG4iICsNCiAgICAgICAgICAgICI8L2Rpdj4iOw0KICAgICAgfSBlbHNlIGlmIChyZW1vdGVVc2VyKSB7ICAgLy8gcmVtb3RlVXNlcuihqOekuui/nOeoi+eUqOaIt+iBiuWkqea2iOaBr++8jOiTneiJsueahOawlOazoQ0KICAgICAgICBodG1sID0gIjxkaXYgY2xhc3M9XCJlbC1yb3dcIiBzdHlsZT1cInBhZGRpbmc6IDVweCAwXCI+XG4iICsNCiAgICAgICAgICAgICIgIDxkaXYgY2xhc3M9XCJlbC1jb2wgZWwtY29sLTJcIiBzdHlsZT1cInRleHQtYWxpZ246IHJpZ2h0XCI+XG4iICsNCiAgICAgICAgICAgICIgIDxzcGFuIGNsYXNzPVwiZWwtYXZhdGFyIGVsLWF2YXRhci0tY2lyY2xlXCIgc3R5bGU9XCJoZWlnaHQ6IDQwcHg7IHdpZHRoOiA0MHB4OyBsaW5lLWhlaWdodDogNDBweDtcIj5cbiIgKw0KICAgICAgICAgICAgIiAgICA8aW1nIHNyYz1cImh0dHBzOi8vY3ViZS5lbGVtZWNkbi5jb20vMy83Yy8zZWE2YmVlYzY0MzY5YzI2NDJiOTJjNjcyNmYxZXBuZy5wbmdcIiBzdHlsZT1cIm9iamVjdC1maXQ6IGNvdmVyO1wiPlxuIiArDQogICAgICAgICAgICAiICA8L3NwYW4+XG4iICsNCiAgICAgICAgICAgICIgIDwvZGl2PlxuIiArDQogICAgICAgICAgICAiICA8ZGl2IGNsYXNzPVwiZWwtY29sIGVsLWNvbC0yMlwiIHN0eWxlPVwidGV4dC1hbGlnbjogbGVmdDsgcGFkZGluZy1sZWZ0OiAxMHB4XCI+XG4iICsNCiAgICAgICAgICAgICIgICAgPGRpdiBjbGFzcz1cInRpcCByaWdodFwiPiIgKyB0ZXh0ICsgIjwvZGl2PlxuIiArDQogICAgICAgICAgICAiICA8L2Rpdj5cbiIgKw0KICAgICAgICAgICAgIjwvZGl2PiI7DQogICAgICB9DQogICAgICBjb25zb2xlLmxvZyhodG1sKQ0KICAgICAgdGhpcy5jb250ZW50ICs9IGh0bWw7DQogICAgfSwNCiAgICBpbml0KCkgew0KICAgICAgdGhpcy51c2VyID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oInVzZXIiKSA/IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oInVzZXIiKSkgOiB7fQ0KICAgICAgbGV0IHVzZXJuYW1lID0gdGhpcy51c2VyLnVzZXJuYW1lOw0KICAgICAgbGV0IF90aGlzID0gdGhpczsNCiAgICAgIGlmICh0eXBlb2YgKFdlYlNvY2tldCkgPT0gInVuZGVmaW5lZCIpIHsNCiAgICAgICAgY29uc29sZS5sb2coIuaCqOeahOa1j+iniOWZqOS4jeaUr+aMgVdlYlNvY2tldCIpOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgY29uc29sZS5sb2coIuaCqOeahOa1j+iniOWZqOaUr+aMgVdlYlNvY2tldCIpOw0KICAgICAgICBsZXQgc29ja2V0VXJsID0gIndzOi8vbG9jYWxob3N0OjkwOTAvaW1zZXJ2ZXIvIiArIHVzZXJuYW1lOw0KICAgICAgICBpZiAoc29ja2V0ICE9IG51bGwpIHsNCiAgICAgICAgICBzb2NrZXQuY2xvc2UoKTsNCiAgICAgICAgICBzb2NrZXQgPSBudWxsOw0KICAgICAgICB9DQogICAgICAgIC8vIOW8gOWQr+S4gOS4qndlYnNvY2tldOacjeWKoQ0KICAgICAgICBzb2NrZXQgPSBuZXcgV2ViU29ja2V0KHNvY2tldFVybCk7DQogICAgICAgIC8v5omT5byA5LqL5Lu2DQogICAgICAgIHNvY2tldC5vbm9wZW4gPSBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgY29uc29sZS5sb2coIndlYnNvY2tldOW3suaJk+W8gCIpOw0KICAgICAgICB9Ow0KICAgICAgICAvLyAg5rWP6KeI5Zmo56uv5pS25raI5oGv77yM6I635b6X5LuO5pyN5Yqh56uv5Y+R6YCB6L+H5p2l55qE5paH5pys5raI5oGvDQogICAgICAgIHNvY2tldC5vbm1lc3NhZ2UgPSBmdW5jdGlvbiAobXNnKSB7DQogICAgICAgICAgY29uc29sZS5sb2coIuaUtuWIsOaVsOaNrj09PT0iICsgbXNnLmRhdGEpDQogICAgICAgICAgbGV0IGRhdGEgPSBKU09OLnBhcnNlKG1zZy5kYXRhKSAgLy8g5a+55pS25Yiw55qEanNvbuaVsOaNrui/m+ihjOino+aekO+8jCDnsbvkvLzov5nmoLfnmoTvvJogeyJ1c2VycyI6IFt7InVzZXJuYW1lIjogInpoYW5nIn0seyAidXNlcm5hbWUiOiAiYWRtaW4ifV19DQogICAgICAgICAgaWYgKGRhdGEudXNlcnMpIHsgIC8vIOiOt+WPluWcqOe6v+S6uuWRmOS/oeaBrw0KICAgICAgICAgICAgX3RoaXMudXNlcnMgPSBkYXRhLnVzZXJzLmZpbHRlcih1c2VyID0+IHVzZXIudXNlcm5hbWUgIT09IHVzZXJuYW1lKSAgLy8g6I635Y+W5b2T5YmN6L+e5o6l55qE5omA5pyJ55So5oi35L+h5oGv77yM5bm25LiU5o6S6Zmk6Ieq6Lqr77yM6Ieq5bex5LiN5Lya5Ye6546w5Zyo6Ieq5bex55qE6IGK5aSp5YiX6KGo6YeMDQogICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIC8vIOWmguaenOacjeWKoeWZqOerr+WPkemAgei/h+adpeeahGpzb27mlbDmja4g5LiN5YyF5ZCrIHVzZXJzIOi/meS4qmtlee+8jOmCo+S5iOWPkemAgei/h+adpeeahOWwseaYr+iBiuWkqeaWh+acrGpzb27mlbDmja4NCiAgICAgICAgICAgIC8vICAvLyB7ImZyb20iOiAiemhhbmciLCAidGV4dCI6ICJoZWxsbyJ9DQogICAgICAgICAgICBpZiAoZGF0YS5mcm9tID09PSBfdGhpcy5jaGF0VXNlcikgew0KICAgICAgICAgICAgICBfdGhpcy5tZXNzYWdlcy5wdXNoKGRhdGEpDQogICAgICAgICAgICAgIC8vIOaehOW7uua2iOaBr+WGheWuuQ0KICAgICAgICAgICAgICBfdGhpcy5jcmVhdGVDb250ZW50KGRhdGEuZnJvbSwgbnVsbCwgZGF0YS50ZXh0KQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0NCiAgICAgICAgfTsNCiAgICAgICAgLy/lhbPpl63kuovku7YNCiAgICAgICAgc29ja2V0Lm9uY2xvc2UgPSBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgY29uc29sZS5sb2coIndlYnNvY2tldOW3suWFs+mXrSIpOw0KICAgICAgICB9Ow0KICAgICAgICAvL+WPkeeUn+S6humUmeivr+S6i+S7tg0KICAgICAgICBzb2NrZXQub25lcnJvciA9IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgICBjb25zb2xlLmxvZygid2Vic29ja2V05Y+R55Sf5LqG6ZSZ6K+vIik7DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["Im.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"Im.vue","sourceRoot":"src/views/GuideSourcePage","sourcesContent":["<template>\r\n  <div style=\"padding: 10px; margin-bottom: 50px\">\r\n    <el-row>\r\n      <el-col :span=\"8\">\r\n        <el-card style=\"width: 100%; min-height: 300px; color: #333\">\r\n          <div style=\"padding-bottom: 10px; border-bottom: 1px solid #ccc\">在线用户<span style=\"font-size: 12px\">（点击聊天气泡开始聊天）</span></div>\r\n          <div style=\"padding: 10px 0\" v-for=\"user in users\" :key=\"user.username\">\r\n            <span>{{ user.username }}</span>\r\n            <i class=\"el-icon-chat-dot-round\" style=\"margin-left: 10px; font-size: 16px; cursor: pointer\"\r\n               @click=\"chatUser = user.username\"></i>\r\n            <span style=\"font-size: 12px;color: limegreen; margin-left: 5px\" v-if=\"user.username === chatUser\">chatting...</span>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"16\">\r\n        <div style=\"width: 800px; margin: 0 auto; background-color: white;\r\n                    border-radius: 5px; box-shadow: 0 0 10px #ccc\">\r\n          <div style=\"text-align: center; line-height: 50px;\">\r\n            Web聊天室（{{ chatUser }}）\r\n          </div>\r\n          <div style=\"height: 350px; overflow:auto; border-top: 1px solid #ccc\" v-html=\"content\"></div>\r\n          <div style=\"height: 200px\">\r\n            <textarea v-model=\"text\" style=\"height: 160px; width: 100%; padding: 20px; border: none; border-top: 1px solid #ccc;\r\n             border-bottom: 1px solid #ccc; outline: none\"></textarea>\r\n            <div style=\"text-align: right; padding-right: 10px\">\r\n              <el-button type=\"primary\" size=\"mini\" @click=\"send\">发送</el-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n<script>\r\nimport request from \"@/utils/request\";\r\nlet socket;\r\nexport default {\r\n  name: \"Im\",\r\n  data() {\r\n    return {\r\n      circleUrl: 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png',\r\n      user: {},\r\n      isCollapse: false,\r\n      users: [],\r\n      chatUser: '',\r\n      text: \"\",\r\n      messages: [],\r\n      content: ''\r\n    }\r\n  },\r\n  created() {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    send() {\r\n      if (!this.chatUser) {\r\n        this.$message({type: 'warning', message: \"请选择聊天对象\"})\r\n        return;\r\n      }\r\n      if (!this.text) {\r\n        this.$message({type: 'warning', message: \"请输入内容\"})\r\n      } else {\r\n        if (typeof (WebSocket) == \"undefined\") {\r\n          console.log(\"您的浏览器不支持WebSocket\");\r\n        } else {\r\n          console.log(\"您的浏览器支持WebSocket\");\r\n          // 组装待发送的消息 json\r\n          // {\"from\": \"zhang\", \"to\": \"admin\", \"text\": \"聊天文本\"}\r\n          let message = {from: this.user.username, to: this.chatUser, text: this.text}\r\n          socket.send(JSON.stringify(message));  // 将组装好的json发送给服务端，由服务端进行转发\r\n          this.messages.push({user: this.user.username, text: this.text})\r\n          // 构建消息内容，本人消息\r\n          this.createContent(null, this.user.username, this.text)\r\n          this.text = '';\r\n        }\r\n      }\r\n    },\r\n    createContent(remoteUser, nowUser, text) {  // 这个方法是用来将 json的聊天消息数据转换成 html的。\r\n      let html\r\n      // 当前用户消息\r\n      if (nowUser) { // nowUser 表示是否显示当前用户发送的聊天消息，绿色气泡\r\n        html = \"<div class=\\\"el-row\\\" style=\\\"padding: 5px 0\\\">\\n\" +\r\n            \"  <div class=\\\"el-col el-col-22\\\" style=\\\"text-align: right; padding-right: 10px\\\">\\n\" +\r\n            \"    <div class=\\\"tip left\\\">\" + text + \"</div>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"  <div class=\\\"el-col el-col-2\\\">\\n\" +\r\n            \"  <span class=\\\"el-avatar el-avatar--circle\\\" style=\\\"height: 40px; width: 40px; line-height: 40px;\\\">\\n\" +\r\n            \"    <img src=\\\"https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png\\\" style=\\\"object-fit: cover;\\\">\\n\" +\r\n            \"  </span>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"</div>\";\r\n      } else if (remoteUser) {   // remoteUser表示远程用户聊天消息，蓝色的气泡\r\n        html = \"<div class=\\\"el-row\\\" style=\\\"padding: 5px 0\\\">\\n\" +\r\n            \"  <div class=\\\"el-col el-col-2\\\" style=\\\"text-align: right\\\">\\n\" +\r\n            \"  <span class=\\\"el-avatar el-avatar--circle\\\" style=\\\"height: 40px; width: 40px; line-height: 40px;\\\">\\n\" +\r\n            \"    <img src=\\\"https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png\\\" style=\\\"object-fit: cover;\\\">\\n\" +\r\n            \"  </span>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"  <div class=\\\"el-col el-col-22\\\" style=\\\"text-align: left; padding-left: 10px\\\">\\n\" +\r\n            \"    <div class=\\\"tip right\\\">\" + text + \"</div>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"</div>\";\r\n      }\r\n      console.log(html)\r\n      this.content += html;\r\n    },\r\n    init() {\r\n      this.user = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {}\r\n      let username = this.user.username;\r\n      let _this = this;\r\n      if (typeof (WebSocket) == \"undefined\") {\r\n        console.log(\"您的浏览器不支持WebSocket\");\r\n      } else {\r\n        console.log(\"您的浏览器支持WebSocket\");\r\n        let socketUrl = \"ws://localhost:9090/imserver/\" + username;\r\n        if (socket != null) {\r\n          socket.close();\r\n          socket = null;\r\n        }\r\n        // 开启一个websocket服务\r\n        socket = new WebSocket(socketUrl);\r\n        //打开事件\r\n        socket.onopen = function () {\r\n          console.log(\"websocket已打开\");\r\n        };\r\n        //  浏览器端收消息，获得从服务端发送过来的文本消息\r\n        socket.onmessage = function (msg) {\r\n          console.log(\"收到数据====\" + msg.data)\r\n          let data = JSON.parse(msg.data)  // 对收到的json数据进行解析， 类似这样的： {\"users\": [{\"username\": \"zhang\"},{ \"username\": \"admin\"}]}\r\n          if (data.users) {  // 获取在线人员信息\r\n            _this.users = data.users.filter(user => user.username !== username)  // 获取当前连接的所有用户信息，并且排除自身，自己不会出现在自己的聊天列表里\r\n          } else {\r\n            // 如果服务器端发送过来的json数据 不包含 users 这个key，那么发送过来的就是聊天文本json数据\r\n            //  // {\"from\": \"zhang\", \"text\": \"hello\"}\r\n            if (data.from === _this.chatUser) {\r\n              _this.messages.push(data)\r\n              // 构建消息内容\r\n              _this.createContent(data.from, null, data.text)\r\n            }\r\n          }\r\n        };\r\n        //关闭事件\r\n        socket.onclose = function () {\r\n          console.log(\"websocket已关闭\");\r\n        };\r\n        //发生了错误事件\r\n        socket.onerror = function () {\r\n          console.log(\"websocket发生了错误\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style>\r\n.tip {\r\n  color: white;\r\n  text-align: center;\r\n  border-radius: 10px;\r\n  font-family: sans-serif;\r\n  padding: 10px;\r\n  width:auto;\r\n  display:inline-block !important;\r\n  display:inline;\r\n}\r\n.right {\r\n  background-color: deepskyblue;\r\n}\r\n.left {\r\n  background-color: forestgreen;\r\n}\r\n</style>\r\n\r\n"]}]}