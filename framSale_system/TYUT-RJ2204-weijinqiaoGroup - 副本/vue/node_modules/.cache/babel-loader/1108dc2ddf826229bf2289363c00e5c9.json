{"remainingRequest":"D:\\课设\\SDU_2023_Nongchanpin37-master\\SDU_2023_Nongchanpin37-master\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\课设\\SDU_2023_Nongchanpin37-master\\SDU_2023_Nongchanpin37-master\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\课设\\SDU_2023_Nongchanpin37-master\\SDU_2023_Nongchanpin37-master\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\课设\\SDU_2023_Nongchanpin37-master\\SDU_2023_Nongchanpin37-master\\vue\\src\\views\\FinancePage\\FinancingDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\课设\\SDU_2023_Nongchanpin37-master\\SDU_2023_Nongchanpin37-master\\vue\\src\\views\\FinancePage\\FinancingDetails.vue","mtime":1692962904000},{"path":"D:\\课设\\SDU_2023_Nongchanpin37-master\\SDU_2023_Nongchanpin37-master\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1692962904000},{"path":"D:\\课设\\SDU_2023_Nongchanpin37-master\\SDU_2023_Nongchanpin37-master\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1692962904000},{"path":"D:\\课设\\SDU_2023_Nongchanpin37-master\\SDU_2023_Nongchanpin37-master\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1692962904000},{"path":"D:\\课设\\SDU_2023_Nongchanpin37-master\\SDU_2023_Nongchanpin37-master\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1692962904000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}